
import java.util.Random;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Family
 */
public class number extends javax.swing.JFrame {
    Random D = new Random();  
    Scanner pro;
    int par[] = new int [4],i=1;
    int vectores[] = new int [1000],jug,b;
    int sumd[]= new int [1000],r;
    int Njugadores=0,lev=1,ga=0,gan,res,d1,d2;
    /**
     * Creates new form NumberRace
     */
    public number() {
        initComponents();
        
        btnTry.setEnabled(false); 
        btnAbout.setEnabled(false);  
        btnConfigParams.setEnabled(false);  
        btnplay.setEnabled(false);
        pnlZonePlay.setEnabled(false);
        lblD1.setEnabled(false);
        lblD2.setEnabled(false);
        
        
        
//        
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnlZonePlay = new javax.swing.JPanel();
        lblD2 = new javax.swing.JLabel();
        lblD1 = new javax.swing.JLabel();
        btnplay = new javax.swing.JButton();
        pnlConfigZone = new javax.swing.JPanel();
        cbxLeven = new javax.swing.JComboBox<>();
        btnStart = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbxNumP = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbl4 = new javax.swing.JLabel();
        lbl3 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        lbl1 = new javax.swing.JLabel();
        pnlPairs = new javax.swing.JPanel();
        lblPares = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lblGana = new javax.swing.JLabel();
        btnConfigParams = new javax.swing.JButton();
        btnAbout = new javax.swing.JButton();
        btnTry = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Number race");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(0, 0, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Number race");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(60, 0, 320, 60);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/car64px.png"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 0, 80, 70);

        pnlZonePlay.setBackground(new java.awt.Color(255, 255, 255));
        pnlZonePlay.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Play zone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlZonePlay.setOpaque(false);
        pnlZonePlay.setLayout(null);

        lblD2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblD2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblD2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pregunta.png"))); // NOI18N
        pnlZonePlay.add(lblD2);
        lblD2.setBounds(200, 70, 64, 70);

        lblD1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblD1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pregunta.png"))); // NOI18N
        pnlZonePlay.add(lblD1);
        lblD1.setBounds(60, 70, 70, 70);

        btnplay.setBackground(new java.awt.Color(164, 10, 198));
        btnplay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnplay.setForeground(new java.awt.Color(204, 204, 204));
        btnplay.setText("play  -  player ");
        btnplay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnplayActionPerformed(evt);
            }
        });
        pnlZonePlay.add(btnplay);
        btnplay.setBounds(70, 170, 190, 40);

        jPanel1.add(pnlZonePlay);
        pnlZonePlay.setBounds(310, 260, 320, 260);

        pnlConfigZone.setBackground(new java.awt.Color(255, 255, 255));
        pnlConfigZone.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Score zone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlConfigZone.setOpaque(false);

        cbxLeven.setBackground(new java.awt.Color(0, 0, 255));
        cbxLeven.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbxLeven.setForeground(new java.awt.Color(204, 204, 204));
        cbxLeven.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " Basic ", " Intermediate ", " Advanced " }));
        cbxLeven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLevenActionPerformed(evt);
            }
        });

        btnStart.setBackground(new java.awt.Color(164, 10, 198));
        btnStart.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnStart.setForeground(new java.awt.Color(204, 204, 204));
        btnStart.setText("Start gamer");
        btnStart.setBorder(null);
        btnStart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Number of players");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Level");

        cbxNumP.setBackground(new java.awt.Color(0, 0, 255));
        cbxNumP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbxNumP.setForeground(new java.awt.Color(204, 204, 204));
        cbxNumP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-> 1", "-> 2", "-> 3", " " }));
        cbxNumP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxNumPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConfigZoneLayout = new javax.swing.GroupLayout(pnlConfigZone);
        pnlConfigZone.setLayout(pnlConfigZoneLayout);
        pnlConfigZoneLayout.setHorizontalGroup(
            pnlConfigZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigZoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfigZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxLeven, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxNumP, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlConfigZoneLayout.setVerticalGroup(
            pnlConfigZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigZoneLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addComponent(cbxNumP, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxLeven, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(pnlConfigZone);
        pnlConfigZone.setBounds(690, 110, 230, 230);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Score zone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("turn player:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("advance positions:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Missing positions ");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Returns");

        lbl4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl4.setForeground(new java.awt.Color(255, 255, 255));
        lbl4.setText("-");

        lbl3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl3.setForeground(new java.awt.Color(255, 255, 255));
        lbl3.setText("-");

        lbl2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl2.setForeground(new java.awt.Color(255, 255, 255));
        lbl2.setText("-");

        lbl1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl1.setForeground(new java.awt.Color(255, 255, 255));
        lbl1.setText("-");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(lbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lbl1))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbl2))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbl3))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbl4))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(20, 110, 230, 220);

        pnlPairs.setBackground(new java.awt.Color(255, 255, 255));
        pnlPairs.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Score zone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlPairs.setToolTipText("");
        pnlPairs.setOpaque(false);

        lblPares.setBackground(new java.awt.Color(0, 204, 204));
        lblPares.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        lblPares.setForeground(new java.awt.Color(204, 204, 204));
        lblPares.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPares.setText("0");

        javax.swing.GroupLayout pnlPairsLayout = new javax.swing.GroupLayout(pnlPairs);
        pnlPairs.setLayout(pnlPairsLayout);
        pnlPairsLayout.setHorizontalGroup(
            pnlPairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPairsLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblPares, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );
        pnlPairsLayout.setVerticalGroup(
            pnlPairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPairsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPares, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );

        jPanel1.add(pnlPairs);
        pnlPairs.setBounds(20, 370, 230, 150);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Score zone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setToolTipText("");
        jPanel6.setOpaque(false);

        lblGana.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        lblGana.setForeground(new java.awt.Color(255, 255, 255));
        lblGana.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGana.setText("?");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblGana, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblGana, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel6);
        jPanel6.setBounds(690, 370, 220, 150);

        btnConfigParams.setBackground(new java.awt.Color(164, 10, 198));
        btnConfigParams.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnConfigParams.setForeground(new java.awt.Color(204, 204, 204));
        btnConfigParams.setText("Config params");
        btnConfigParams.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfigParams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigParamsActionPerformed(evt);
            }
        });
        jPanel1.add(btnConfigParams);
        btnConfigParams.setBounds(360, 210, 210, 30);

        btnAbout.setBackground(new java.awt.Color(164, 10, 198));
        btnAbout.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnAbout.setForeground(new java.awt.Color(204, 204, 204));
        btnAbout.setText("About of");
        btnAbout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAboutActionPerformed(evt);
            }
        });
        jPanel1.add(btnAbout);
        btnAbout.setBounds(360, 170, 210, 30);

        btnTry.setBackground(new java.awt.Color(164, 10, 198));
        btnTry.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnTry.setForeground(new java.awt.Color(204, 204, 204));
        btnTry.setText("Try Again");
        btnTry.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTryActionPerformed(evt);
            }
        });
        jPanel1.add(btnTry);
        btnTry.setBounds(360, 130, 210, 30);

        jLabel9.setBackground(new java.awt.Color(51, 51, 255));
        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/l.jpg"))); // NOI18N
        jLabel9.setText("jLabel9");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(0, 4, 930, 550);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
         //TODO add your handling code here:
        
         
        pnlZonePlay.setEnabled(true);
        lblD1.setEnabled(true);
        lblD2.setEnabled(true);
        btnplay.setEnabled(true);
        btnTry.setEnabled(true);    
        btnAbout.setEnabled(true);  
        btnConfigParams.setEnabled(true); 
        btnplay.setText("Play - Player 1");
        
        
        
            
        
    }//GEN-LAST:event_btnStartActionPerformed

    private void cbxNumPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxNumPActionPerformed
        
        
        
    }//GEN-LAST:event_cbxNumPActionPerformed

    private void cbxLevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLevenActionPerformed
        // TODO add your handling code here:
        String leven = null;
        leven = leven+cbxLeven.getSelectedItem().toString();
    }//GEN-LAST:event_cbxLevenActionPerformed

    private void btnTryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTryActionPerformed
        lblD1.setIcon(new ImageIcon(getClass().getResource("images/pregunta.png")));
        lblD2.setIcon(new ImageIcon(getClass().getResource("images/pregunta.png")));
        lbl1.setText(" - ");
        lbl2.setText(" - ");
        lbl3.setText(" - ");
        lbl4.setText(" - ");
        lblPares.setText("0");
        btnplay.setText("Play - Playing");
        btnTry.setEnabled(false); 
        btnAbout.setEnabled(false);  
        btnConfigParams.setEnabled(false);  
        btnplay.setEnabled(false);
        pnlZonePlay.setEnabled(false);
        lblD1.setEnabled(false);
        lblD2.setEnabled(false);
        lblPares.setEnabled(false);
        lblGana.setEnabled(false);
        
  
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTryActionPerformed

    private void btnplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnplayActionPerformed
        
//            int res = 0;
//        
//                        res = (d1+d2);
//                        lbl2.setText(Integer.toString(res));
//                        if (res==2){
//                            res = 21;   
//                            lbl2.setText(Integer.toString(res));
//                        }
//        
            
//            Njugadores = Integer.parseInt(cbxNumP.getSelectedItem().toString());
            String nivel = cbxLeven.getSelectedItem().toString();
                
//            if (nivel.equals("Basic")){
//                lev=1;
//            }
//             if (nivel.equals("Intermediate")){
//                lev=2;
//            }
//              if (nivel.equals("Advanced")){
//                lev=3;
//            }
                
                if(lev==1){
                    
                    
           
                    if (ga<50){
                        
                        System.out.println("posicion del jugador ("+i+")= "+ vectores[i]);
                        
                        if(vectores[i]<50){
                            btnplay.setText("Play - Player "+i);
                            lbl1.setText(String.valueOf(i));
                            
                        

                            


                            d1 =  D.nextInt(7);
                            
                            System.out.println("dado1  "+ d1);
                            
                         switch (d1){               
                             case 1:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/1.png")));
                             break;
                             case 2:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/2.png")));
                             break;
                             case 3:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/3.png")));
                             break;
                             case 4:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/4.png")));
                             break;
                             case 5:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/5.png")));
                             break;
                             case 6:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/6.png"))); 
                             break;
                             default:

                             break;

                         }//cierre de switch dado1
                            d2 =  D.nextInt(7);
                            System.out.println("dado2  "+ d2);
                            
                         switch (d2){

                             case 1:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/1.png")));
                             break;
                             case 2:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/2.png")));
                             break;
                             case 3:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/3.png")));
                             break;
                             case 4:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/4.png")));
                             break;
                             case 5:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/5.png")));
                             break;
                             case 6:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/6.png")));
                             break;
                             default:

                             break;


                             }//cierre de switch dado2
                                res = d1 + d2;
                                vectores[i]= res + vectores[i]; 
                                lbl2.setText(String.valueOf(vectores[i]));
                             if (vectores[i]>50){
                                 vectores[i]=vectores[i]-d1;
                                 System.out.println("el numero se pasas del limite ");
                            
                             }
                             if(vectores[i]==50){
                                 ga=50;
                                 gan=1;
                                 
                             }
                        }    
                    }        
                }         
                           
                if(lev==2){
                    
                    
           
                    if (ga<100){
                        
                        System.out.println("posicion del jugador ("+i+")= "+ vectores[i]);
                        
                        if(vectores[i]<100){
                            btnplay.setText("Play - Player "+i);
                            lbl1.setText(String.valueOf(i));
                            
                        

                            


                            d1 =  D.nextInt(7);
                            
                            System.out.println("dado1  "+ d1);
                            
                         switch (d1){               
                             case 1:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/1.png")));
                             break;
                             case 2:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/2.png")));
                             break;
                             case 3:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/3.png")));
                             break;
                             case 4:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/4.png")));
                             break;
                             case 5:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/5.png")));
                             break;
                             case 6:
                             lblD1.setIcon(new ImageIcon(getClass().getResource("images/6.png"))); 
                             break;
                             default:

                             break;

                         }//cierre de switch dado1
                            d2 =  D.nextInt(7);
                            System.out.println("dado2  "+ d2);
                            
                         switch (d2){

                             case 1:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/1.png")));
                             break;
                             case 2:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/2.png")));
                             break;
                             case 3:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/3.png")));
                             break;
                             case 4:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/4.png")));
                             break;
                             case 5:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/5.png")));
                             break;
                             case 6:
                             lblD2.setIcon(new ImageIcon(getClass().getResource("images/6.png")));
                             break;
                             default:

                             break;


                             }//cierre de switch dado2
                                res = d1 + d2;
                                vectores[i]= res + vectores[i]; 
                                lbl2.setText(String.valueOf(vectores[i]));
                             if (vectores[i]>100){
                                 vectores[i]=vectores[i]-d1;
                                 System.out.println("el numero se pasas del limite ");
                            
                             }
                             if(vectores[i]==100){
                                 ga=100;
                                 gan=1;
                                 
                             }
                        }    
                    }        
                }             
                       
                     
                if (d1==d2){
                      par[i]++;
                      lblPares.setText(Integer.toString(par[i]));
                    }else
                      par[i]=0;{
                      lblPares.setText(Integer.toString(par[i]));
                    }     
                    if (par[i]==3){
                        lblGana.setText("YOU WIN");   
                    }
                                
                        
                        
                    
                    
            
                 
                       
                
                    
                 
                  
                  
                
            
           


                



//                  int da1 = D.nextInt(7);
//                  int da2 = D.nextInt(7);
//                
                
    
//                System.out.print("play - player 3");
            
//         if (d1==d2){
//             
//             Pares[i]++;
//             lblPares.setText(String.valueOf(Pares[i]));
//             
//         }else{
//             Pares[i]=0;
//             lblPares.setText(String.valueOf(Pares[i]));
//         }   
//         
//            String NumJugadores = null;
//            NumJugadores = NumJugadores+cbxNumP.getSelectedItem().toString();
           
                
            
        
        
        
        
//        
//        
//        int elec=0;
//        switch (elec){
//            case 1:
//                if (vic<50){
//                    
//                    System.out.println("la meta  es = 50");
//                    System.out.println("la posicion del jugador("+i+")="+ vector[i]); 
//                    
//                        if(vector[i]+6<50){
//                            System.out.println("jigador"+i);
//                            lbl1.setText(String.valueOf(i));
//                            System.out.println("presione enter para lanzar los dados");
//                            
////                            Random D = new Random();
////                            int d1 = 0, d2 = 0;
////
////                            d1 = (int)(D.nextDouble()* 6 + 1);
////                            d2 = (int)(D.nextDouble()* 6 + 1);
////                            System.out.println("dado1 " + d1);
////                            System.out.println("dado2 " + d2);
//
//                             int d1 = 1 + D.nextInt(6);
//                             int d2 = 1 + D.nextInt(6);
//                             System.out.println("dado1  "+d1);
//                             System.out.println("dado1  "+d1);
//                             
//                            switch (d1){
//                                 case 1:
//                                lblD1.setIcon(new ImageIcon(getClass().getResource("images/1.png")));
//                                break;
//                                case 2:
//                                lblD1.setIcon(new ImageIcon(getClass().getResource("images/2.png")));
//                                break;
//                                case 3:
//                                lblD1.setIcon(new ImageIcon(getClass().getResource("images/3.png")));
//                                break;
//                                case 4:
//                                lblD1.setIcon(new ImageIcon(getClass().getResource("images/4.png")));
//                                break;
//                                case 5:
//                                lblD1.setIcon(new ImageIcon(getClass().getResource("images/5.png")));
//                                break;
//                                case 6:
//                                lblD1.setIcon(new ImageIcon(getClass().getResource("images/6.png")));
//                                break;
//                                default:
//
//                                break;
//                                }
//                                
//                                
//                            
//                            switch (d2){
//
//                                    case 1:
//                                    lblD2.setIcon(new ImageIcon(getClass().getResource("images/1.png")));
//                                    break;
//                                    case 2:
//                                    lblD2.setIcon(new ImageIcon(getClass().getResource("images/2.png")));
//                                    break;
//                                    case 3:
//                                    lblD2.setIcon(new ImageIcon(getClass().getResource("images/3.png")));
//                                    break;
//                                    case 4:
//                                    lblD2.setIcon(new ImageIcon(getClass().getResource("images/4.png")));
//                                    break;
//                                    case 5:
//                                    lblD2.setIcon(new ImageIcon(getClass().getResource("images/5.png")));
//                                    break;
//                                    case 6:
//                                    lblD2.setIcon(new ImageIcon(getClass().getResource("images/6.png")));
//                                    break;
//                                    default:
//
//                                    break;
//
//                                }
//                            
//                                
//                            
//                                   
//                                    
//                                
//                        }
//                            
//                            
//                        
//                    
//                }
//        }
    }//GEN-LAST:event_btnplayActionPerformed

    private void btnConfigParamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigParamsActionPerformed
        // TODO add your handling code here:
        String NumJugadores = null;
        NumJugadores = NumJugadores+cbxNumP.getSelectedItem().toString();
        
         
    }//GEN-LAST:event_btnConfigParamsActionPerformed

    private void btnAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAboutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "***REGLAS DEL JUEGO***\n EN EL JUEGO SE PERMITIRAN JUGADORES  DE 1 A 3."
                + "ELIJA SU NIVEL\nDE DIFICULTAD QUE SEA DESEADO. PRECIONA EL BOTTON *START* PARA INICIAR EL JUEGO\n"
                + "PRECIONA EL BOTTON *PLAY* PARA TIRAR LOS DADOS. SI UN JUGADOR TIENE TRES\n PARES CONSECUTIVOS GANA "
                + "LA PARTIDA (***YOU WIN*** ). SI QUIERE REINICIAR EL JUEGO PRECIONE\n EL BOTON *TRY AGIAN*.\n DISFRUTA DEl JUEGO *** BUENA SUERTE*** " ); 
    }//GEN-LAST:event_btnAboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(number.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(number.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(number.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(number.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new number().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbout;
    private javax.swing.JButton btnConfigParams;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnTry;
    private javax.swing.JButton btnplay;
    private javax.swing.JComboBox<String> cbxLeven;
    private javax.swing.JComboBox<String> cbxNumP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lblD1;
    private javax.swing.JLabel lblD2;
    private javax.swing.JLabel lblGana;
    private javax.swing.JLabel lblPares;
    private javax.swing.JPanel pnlConfigZone;
    private javax.swing.JPanel pnlPairs;
    private javax.swing.JPanel pnlZonePlay;
    // End of variables declaration//GEN-END:variables
}
